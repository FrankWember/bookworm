generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  roles         Role @default(USER)
  image         String?
  password      String?
  Book          Book[]
  accounts      Account[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id        String    @id @default(cuid())
  email      String
  token      String
  expires    DateTime
  @@unique([email, token])
}

model Book {
  id              String    @id @default(cuid())
  title           String
  author          String
  description     String?
  coverImageUrl   String?
  publicationDate DateTime?
  genre           String?
  ownerId         String
  owner           User      @relation(fields: [ownerId], references: [id])
}

model Waitlist {
  id        String    @id @default(cuid())
  email     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([email])
  @@map("waitlist")
}