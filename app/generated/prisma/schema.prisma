// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  username  String?  @unique
  password  String
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  books     Book[]   @relation("UserBooks") // Books they added or own
  favorites Book[]   @relation("FavoriteBooks") // Books they favorited
  reviews   Review[] // Reviews by the user
}

model Book {
  id              String    @id @default(cuid())
  title           String
  author          String
  description     String?
  coverImageUrl   String?
  publicationDate DateTime?
  genre           String?
  rating          Float?

  // Relations
  owner   User?   @relation("UserBooks", fields: [ownerId], references: [id])
  ownerId String?

  favoritedBy User[]   @relation("FavoriteBooks") // Who favorited this book
  reviews     Review[] // Reviews of the book
}

model Review {
  id        String   @id @default(cuid())
  content   String
  rating    Int // 1â€“5
  createdAt DateTime @default(now())

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  userId String

  book   Book   @relation(fields: [bookId], references: [id])
  bookId String
}
